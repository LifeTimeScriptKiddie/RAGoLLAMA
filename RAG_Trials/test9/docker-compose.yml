version: '3.8'

services:
  # Ollama service
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  # Backend API service  
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: rag-backend
    ports:
      - "8000:8000"
    volumes:
      - rag_raw_docs:/data/raw_docs
      - rag_index:/data/index
      - rag_cache:/data/cache
    working_dir: /app
    environment:
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - PYTHONPATH=/app
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  # Streamlit frontend (optional)
  frontend-streamlit:
    build:
      context: .
      dockerfile: apps/frontend-streamlit/Dockerfile
    container_name: rag-frontend-streamlit
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rag-network

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: rag-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - rag-network

  # Grafana monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: rag-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - rag-network

volumes:
  ollama_data:
  rag_raw_docs:
  rag_index:
  rag_cache:
  prometheus_data:
  grafana_data:

networks:
  rag-network:
    driver: bridge