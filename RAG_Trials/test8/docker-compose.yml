
services:

  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres_rag
    environment:
      POSTGRES_DB: rag_db
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    # Override the entrypoint to run a shell, so we can execute a script.
    entrypoint: sh
    # This command starts the server in the background, waits 5 seconds for it to initialize,
    # pulls the required models, and then uses 'wait' to keep the container running.
    command: >
      -c "
        ollama serve &
        sleep 5 &&
        ollama pull llama3 &&
        ollama pull mistral &&
        ollama pull codellama &&
        ollama pull gemma &&
        ollama pull orca-mini &&
        wait"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - openwebui_data:/app/backend/data
    restart: unless-stopped

  rag-backend:
    build: ./rag_backend
    container_name: rag_backend
    depends_on:
      - ollama
      - open-webui
    volumes:
      - ./rag_backend:/app
      - ./rag_backend/docs:/app/docs  # Mounts host's docs into container
    env_file:
      - ./rag_backend/.env
    restart: unless-stopped
    command: cron -f  # runs cron in foreground (uploads run at 2 AM)

  backend:
    build: ./backend
    container_name: rag_backend_api
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - ollama
    environment:
      DATABASE_URL: postgresql://rag_user:rag_password@postgres:5432/rag_db
      OLLAMA_URL: http://ollama:11434
      EMBED_MODEL: all-MiniLM-L6-v2
    restart: unless-stopped

  streamlit-ui:
    build: ./rag_backend
    container_name: streamlit_ui
    ports:
      - "8501:8501"
    depends_on:
      - backend
      - ollama
    volumes:
      - ./rag_backend:/app
      - ./rag_backend/docs:/app/docs
    environment:
      BACKEND_URL: http://backend:8000
      OLLAMA_URL: http://ollama:11434
      OPEN_WEBUI_URL: http://open-webui:8080
      OPEN_WEBUI_TOKEN: Bearer YOUR_OPEN_WEBUI_TOKEN
      EMBED_MODEL: all-MiniLM-L6-v2
    restart: unless-stopped
    command: streamlit run streamlit_app.py --server.address 0.0.0.0 --server.port 8501

volumes:
  openwebui_data:
  ollama_data:
  postgres_data: